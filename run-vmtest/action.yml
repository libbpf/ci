name: 'run vmtest'
description: 'Run vmtest and print summary'
inputs:
  arch:
    description: 'arch'
    required: true
  vmlinuz:
    description: |
      If passed, this vmlinuz will be used. Otherwise vmlinuz will be
      searched via make -s image_name in kbuild-output.
    required: false
  kernel-root:
    description: 'kernel source dir'
    default: '.'
  max-cpu:
    description: 'Maximum number of CPU allocated to a VM (regardless of number of CPUs available on the host). Default is unset, e.g it will default to the number of CPU on the host.'
    default: ''
  kernel-test:
    description: 'Test to run'
    default: ''
  output-dir:
    description: |
      Some sub-commands produce output dir within VM file system (/command_output/).
      If this option is set that dir's content would be copied to corresponding location.
    default: ''
  kbuild-output:
    description: 'Path to KBUILD_OUTPUT'
    required: false
    default: 'kbuild-output'
  vmtest-release:
    description: 'Release version of vmtest tool to use'
    required: false
    default: 'v0.18.0'

runs:
  using: "composite"
  steps:

    - name: Install dependencies
      shell: bash
      env:
        VMTEST_RELEASE: ${{ inputs.vmtest-release }}
      run: ${GITHUB_ACTION_PATH}/install-dependencies.sh

    - name: Configure KVM group perms
      shell: bash
      run: |
        source "${GITHUB_ACTION_PATH}/../helpers.sh"
        foldable start config_kvm "Configuring KVM permissions"
        # Only configure kvm perms if kvm is available
        if [[ -e /dev/kvm && ! -w /dev/kvm ]]; then
          echo "Updating KVM permissions"
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
        fi
        foldable end config_kvm

    - name: Run vmtest
      shell: bash
      env:
        ARCH: ${{ inputs.arch }}
        KBUILD_OUTPUT: ${{ inputs.kbuild-output }}
        KERNEL_ROOT: ${{ inputs.kernel-root }}
        KERNEL_TEST: ${{ inputs.kernel-test }}
        MAX_CPU: ${{ inputs.max-cpu }}
        OUTPUT_DIR: ${{ inputs.output-dir }}
        VMLINUZ: ${{ inputs.vmlinuz || '' }}
      run: |
        ${GITHUB_ACTION_PATH}/run.sh

